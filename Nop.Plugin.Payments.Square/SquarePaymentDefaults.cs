using Nop.Core;

namespace Nop.Plugin.Payments.Square;

/// <summary>
/// Represents plugin constants
/// </summary>
public class SquarePaymentDefaults
{
    /// <summary>
    /// Square payment method system name
    /// </summary>
    public static string SystemName => "Payments.Square";

    /// <summary>
    /// User agent used to request Square services
    /// </summary>
    public static string UserAgent => $"nopCommerce-{NopVersion.CURRENT_VERSION}";

    /// <summary>
    /// The Integration ID should be added in the charge endpoint in order to correctly track the profit generated by the merchants using the Square payment plugin
    /// </summary>
    public static string IntegrationId => "sqi_4efb0346e2ef4b1375319dcd6e9977c0";

    /// <summary>
    /// One page checkout route name
    /// </summary>
    public static string OnePageCheckoutRouteName => "CheckoutOnePage";

    /// <summary>
    /// Path to the Square payment form js script
    /// </summary>
    public static string PaymentFormScriptPath => "https://web.squarecdn.com/v1/square.js";

    /// <summary>
    /// Path to the Square payment form js script
    /// </summary>
    public static string SandboxPaymentFormScriptPath => "https://sandbox.web.squarecdn.com/v1/square.js";

    /// <summary>
    /// Key of the attribute to store Square customer identifier
    /// </summary>
    public static string CustomerIdAttribute => "SquareCustomerId";

    /// <summary>
    /// Name of the route to the access token callback
    /// </summary>
    public static string AccessTokenRoute => "Plugin.Payments.Square.AccessToken";

    /// <summary>
    /// Name of the renew access token schedule task
    /// </summary>
    public static (string Name, string Type, int Period, int MaxPeriod) RenewAccessTokenTask =>
        ("Renew access token (Square payment)", "Nop.Plugin.Payments.Square.Services.RenewAccessTokenTask", 14, 30);

    /// <summary>
    /// Sandbox credentials should start with this prefix
    /// </summary>
    public static string SandboxCredentialsPrefix => "sandbox-";

    /// <summary>
    /// Note passed for each payment transaction
    /// </summary>
    /// <remarks>
    /// {0} : Order Guid
    /// </remarks>
    public static string PaymentNote => "nopCommerce: {0}";

    public class Status
    {
        /// <summary>
        /// Payment status "APPROVED"
        /// </summary>
        public const string PAYMENT_APPROVED = "APPROVED";

        /// <summary>
        /// Payment status "COMPLETED"
        /// </summary>
        public const string PAYMENT_COMPLETED = "COMPLETED";

        /// <summary>
        /// Payment status "FAILED"
        /// </summary>
        public const string PAYMENT_FAILED = "FAILED";

        /// <summary>
        /// Payment status "CANCELED"
        /// </summary>
        public const string PAYMENT_CANCELED = "CANCELED";

        /// <summary>
        /// Location status "ACTIVE"
        /// </summary>
        public const string LOCATION_ACTIVE = "ACTIVE";

        /// <summary>
        /// Location capability "CREDIT_CARD_PROCESSING"
        /// </summary>
        public const string LOCATION_PROCESSING = "CREDIT_CARD_PROCESSING";

        /// <summary>
        /// Refund status "PENDING"
        /// </summary>
        public const string REFUND_PENDING = "PENDING";

        /// <summary>
        /// Refund status "COMPLETED"
        /// </summary>
        public const string REFUND_COMPLETED = "COMPLETED";
    }
}